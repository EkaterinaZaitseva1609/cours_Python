#filter, так же как и map, на вход принимает функцию и итерабельные последовательности
# результатом будет являться объект фильтр
# также будет представлять собой итератор, но вернет только те элементы, для которых функция вернет значение True
# то значит, что функция должна возвращить либо значение True либо False

# def f(x):
#     return x > 10
#
# a = [14, 0, 34, 67, 4, 56, 123, 46, 0, 87]
# b = list(filter(f, a))
# print(b)

# Также можно использовать встроенные функции, которые вернут значение True либо False

# a = [14, 0, 34, '', 4, ' ', 123, [5], 0, 87, [], 5]
# b = list(filter(bool, a)) #если значение не пустое, то результат будет True иначе False
# print(b) [14, 34, 4, ' ', 123, [5], 87, 5]

# Можно передавать анонимные функции
# a = ['hi', 'hello', 'privet', 'chao', 'good']
# b = list(filter(lambda x: len(x) > 4, a))
# print(b) #['hello', 'privet']

# можно в лист записать результат, а можно и в кортеж
list_1 = [1, 2, 3, 4, 5, 5, 2]
a = list(filter(lambda x: x > 2, list_1))
print(a)

# a = tuple(filter(lambda x: x > 2, list_1))
# print(a)
